sumList[i] <- cntsum
}
batchdate <- "2015-06-05"
paste("Volumes/data/hi-seq", "/HRDP.Liver.totalRNA.", batchdate, "/rawReads/", "countSummary", ".txt", sep = "")
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(i in batchdate) {
cntsum <- read.table(file = paste("Volumes/data/hi-seq", "/HRDP.Liver.totalRNA.", batchdate, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[i] <- cntsum
}
options(stringsAsFactors = F)
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(i in 1:10) {
for(j in batchdate) {
cntsum <- read.table(file = paste("Volumes/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[i] <- cntsum
}
}
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(i in 1:10) {
for(j in batchdate) {
cntsum <- read.table(file = paste("/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[i] <- cntsum
}
}
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(i in 1:10) {
for(j in batchdate) {
cntsum <- read.table(file = paste(dirs, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[i] <- cntsum
}
}
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(i in 1:10) {
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[i] <- cntsum
}
}
names(sumList) batchdate
names(sumList) <- batchdate
sumList$`2015-06-05`
dim(sumList$`2015-06-05`)
type(sumList$`2015-06-05`)
typeof(sumList$`2015-06-05`)
harry <- unlist(lapply(strsplit(sumList, split = "\\n", fixed = T), FUN = function(x) x[1]))
harry <- unlist(lapply(strsplit(sumList$`2015-06-05`, split = "\\n", fixed = T), FUN = function(x) x[1]))
harry
sumList$`2015-06-05`[1]
sumList$`2015-06-05`[2]
harry <- lapply(sumList, FUN = function(x) x[[1]])
harry
harry <- lapply(sumList, FUN = function(x) x[[T,F]])
harry <- lapply(sumList, FUN = function(x) x[[c(T,F)]])
harry[[]]
sumList[[]]
sumList[[1]]
sumList[1]
length(sumList)
seq(1, length(sumList[1]))
sumList[1]
seq(1, length(sumList[1]), 2)
length(sumList[1])
length(sumList$`2015-06-05`)
length(sumList[1][1]
)
length(sumList[[1]])
seq(1, length(sumList[[1]]), 2)
seq(2, length(sumList[[1]]), 2)
for(i in 1:length(sumList)) {
df <- as.data.frame(cbind(sumList[[seq(1, length(sumList[[i], 2))]], sumList[[seq(2, length(sumList[[i], 2))]]))
dfList[i] <- df
}
sumList[[seq(1, length(sumList[[1], 2))]]
df <- list()
for(i in 1:length(sumList)) {
df <- as.data.frame(cbind(sumList[[seq(1, length(sumList[[1]], 2))]], sumList[[seq(2, length(sumList[[i]], 2))]]))
dfList[i] <- df
}
df <- list()
for(i in 1:length(sumList)) {
df <- as.data.frame(cbind(sumList[[seq(1, length(sumList[[1]]), 2)]], sumList[[seq(2, length(sumList[[i]]), 2)]]))
dfList[i] <- df
}
seq(1, length(sumList[[1]]), 2)
sumList[[seq(1, length(sumList[[1]]), 2)]]
sumList[[1]]
sumList[1]
sumList[seq(1, length(sumList[[1]]), 2)]
df <- sumList$`2015-06-05`
View(cntsum)
typeof(df)
df2 <- df[c(T,F)]
df2
df3 <- df[c(F,T)]
cbind(df2, df3)
df.out <- NULL
for(i in batchdate) {
df <- sumList$i
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
df.out <- NULL
for(i in batchdate) {
df <- sumList$`i`
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
names(sumList)
df.out <- NULL
for(i in names(sumList)) {
df <- sumList$i
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
sumList["2015-06-05"]
df.out <- NULL
for(i in names(sumList)) {
df <- sumList[i]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
View(df.out)
df <- sumList[i]
filenames <- df[c(T,F)]
filenames
df
df <- as.character(sumList[i])
df
df <- sumList$`2015-06-05`
df
filenames <- df[c(T,F)]
filenames
df <- sumList[[1]]
df
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
View(df.out)
rm(df.out)
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- rbind(df.out, df.done)
}
View(df.out)
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- as.data.frame(rbind(df.out, df.done))
}
View(df.out)
filenames
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[6]))
file
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[7]))
file
realcount <- df.out$counts/4
realcount <- as.numeric(df.out$counts)/4
realcount
count.df.tmp <- as.data.frame(cbind(file, realcount))
View(count.df.tmp)
View(df.out)
1:10
df <- sumList[[1]]
filenames <- df[c(T,F)]
filenames
df <- sumList[[2]]
filenames <- df[c(T,F)]
df
filenames
df <- sumList[[8]]
filenames <- df[c(T,F)]
filenames
sumList[1]
sumList <- list()
for(i in batchdate) {
for(j in 1:10) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", i, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
}
sumList[1]
sumList <- list()
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
sumList[1]
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
names(sumList) <- batchdate
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- as.data.frame(rbind(df.out, df.done))
}
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[7]))
realcount <- as.numeric(df.out$counts)/4
count.df.tmp <- as.data.frame(cbind(file, realcount))
View(count.df.tmp)
View(df.out)
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[5]))
file
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[6]))
file
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
names(sumList) <- batchdate
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- as.data.frame(rbind(df.out, df.done))
}
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp, split = "/", fixed = T), FUN = function(x) x[6]))
realcount <- as.numeric(df.out$counts)/4
file
View(df.out)
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp[1:278], split = "/", fixed = T), FUN = function(x) x[6]))
file2 <- unlist(lapply(strsplit(file.tmp[279:length(file.tmp)], split = "/", fixed = T), FUN = function(x) x[7]))
file
file2
file <- c(file, file2)
file
realcount
counts
sumList[1]
View(df.out)
file
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
names(sumList) <- batchdate
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- as.data.frame(rbind(df.out, df.done))
}
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp[1:278], split = "/", fixed = T), FUN = function(x) x[6]))
file2 <- unlist(lapply(strsplit(file.tmp[279:length(file.tmp)], split = "/", fixed = T), FUN = function(x) x[7]))
file <- c(file, file2)
realcount <- as.numeric(df.out$counts)/4
count.df.tmp <- as.data.frame(cbind(file, realcount))
View(count.df.tmp)
plot(as.numeric(count.df.tmp$realcount))
hist(as.numeric(count.df.tmp$realcount))
summary(as.numeric(count.df.tmp$realcount))
mean(realcount)
median(realcount)
# WORKING FROM LOCAL MACHINE SOURCE ##
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
source("~/Desktop/Saba_Lab/Liver/code/sep.panel2.R")
options(stringsAsFactors = F)
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
N <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
tissue <- "Liver"
chrSize <- "rn6.chrom.sizes"
library(plyr)
## WORKING FROM LOCAL MACHINE LOAD ##
load(file = paste(dirlocal, tissue, "/quantitation/",  "PA.table.RMO", ".Rdata", sep = ""))
load(file = paste(dirlocal, tissue, "/quantitation/",  "BXH1IR.nospike", ".Rdata", sep = ""))
## summarize transcript content using sep.panel function. This function will create useful datasets as well.
content.summary <- sep.panel(PA.table.RMO)
# Subset columns with present/absent codes
known.results <- content.summary$KN_Results[, c(5,6)]
ntkg.results <- content.summary$NTKG_Results[, c(5,6)]
ntng.results <- content.summary$NTNG_Results[, c(5,6)]
# Change codes to factor and give meaningful labels for both known and novel datasets
known.results[, 1] <- factor(known.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
known.results[, 2] <- factor(known.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
known.results$transcript_id <- rownames(known.results)
ntkg.results[, 1] <- factor(ntkg.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
ntkg.results[, 2] <- factor(ntkg.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
ntkg.results$transcript_id <- rownames(ntkg.results)
ntng.results[, 1] <- factor(ntng.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
ntng.results[, 2] <- factor(ntng.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
ntng.results$transcript_id <- rownames(ntng.results)
# Make dataset that has the absent transcripts from the ALO data removed
full.transcript.set <- as.data.frame(rbind(known.results, ntkg.results, ntng.results))
'%!in%' <- function(x,y)!('%in%'(x,y))
transcript.set.hires <- full.transcript.set[which(full.transcript.set$RS.atleast1 %!in% c("Not present")), ]
transcript.set.hires$transcript_id <- rownames(transcript.set.hires)
subtype <- c("Present in both", "Present in ALO IB", "Present in ALO RI")
subtype2 <- c("Present in all strains", "Present in all IB", "Present all RI")
dataList <- list(known.results, ntkg.results, ntng.results)
refDat <- transcript.set.hires
i = 1
i2 = 2
qcAOL <- contentQC(subtype, dataList, refDat, i)
qcALL <- contentQC(subtype2, dataList, refDat, i2)
transcriptListAOL <- qcAOL[[1]]
save(transcriptListAOL, file = paste(dirlocal, tissue, "/quantitation/",  "transcriptListAOL", ".Rdata", sep = ""))
## summarize transcript content using sep.panel function. This function will create useful datasets as well.
content.summary <- sep.panel2(PA.table.RMO)
# Subset columns with present/absent codes
known.results <- content.summary$KN_Results[, c(5,6)]
ntkg.results <- content.summary$NTKG_Results[, c(5,6)]
ntng.results <- content.summary$NTNG_Results[, c(5,6)]
# Change codes to factor and give meaningful labels for both known and novel datasets
known.results[, 1] <- factor(known.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
known.results[, 2] <- factor(known.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
known.results$transcript_id <- rownames(known.results)
ntkg.results[, 1] <- factor(ntkg.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
ntkg.results[, 2] <- factor(ntkg.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
ntkg.results$transcript_id <- rownames(ntkg.results)
ntng.results[, 1] <- factor(ntng.results[, 1], levels = c(2,6,11,15), labels = c("Present in both", "Present in ALO IB", "Present in ALO RI", "Not present"), ordered = FALSE)
ntng.results[, 2] <- factor(ntng.results[, 2], levels = c(2,6,11,15), labels = c("Present in all strains", "Present in all IB", "Present all RI", "Other"), ordered = FALSE)
ntng.results$transcript_id <- rownames(ntng.results)
# Make dataset that has the absent transcripts from the ALO data removed
full.transcript.set <- as.data.frame(rbind(known.results, ntkg.results, ntng.results))
'%!in%' <- function(x,y)!('%in%'(x,y))
transcript.set.hires <- full.transcript.set[which(full.transcript.set$RS.atleast1 %!in% c("Not present")), ]
transcript.set.hires$transcript_id <- rownames(transcript.set.hires)
subtype <- c("Present in both", "Present in ALO IB", "Present in ALO RI")
subtype2 <- c("Present in all strains", "Present in all IB", "Present all RI")
dataList <- list(known.results, ntkg.results, ntng.results)
refDat <- transcript.set.hires
i = 1
i2 = 2
contentQC <- function(subtype, dataList, refDat, i) {
st1 <- subtype[1]
st2 <- subtype[2]
st3 <- subtype[3]
qclist <- do.call("rbind", llply(dataList, .fun = function(x) {
known.pib <- x[which(x[,i] %in% c(st1)), ]
pib.test <- sum(known.pib[,3] %in% refDat$transcript_id) == length(known.pib[,3])
pib.len <- length(known.pib[,3])
known.IB <- x[which(x[,i] %in% c(st2)), ]
IB.test <- sum(known.IB[,3] %in% refDat$transcript_id) == length(known.IB[,3])
IB.len <- length(known.IB[,3])
known.RI <- x[which(x[,i] %in% c(st3)), ]
RI.test <- sum(known.RI[,3] %in% refDat$transcript_id) == length(known.RI[,3])
RI.len <- length(known.RI[,3])
known.test <- sum(pib.test, IB.test, RI.test) == 3
df <- c(pib.len, IB.len, RI.len, sum(pib.len, IB.len, RI.len), known.test)
}))
tots <- apply(qclist, 2, function(x) sum(x))
df.out <- rbind(qclist, tots)
df.out[,5] <- ifelse(df.out[,5] == c(1), "Yes", NA)
rownames(df.out) <- c("Known transcript of known gene", "Novel transcript of known gene", "Novel transcript of novel gene", "Totals")
colnames(df.out) <- c("Present in both", "Present in classic inbreds", "Present in recombinant inbreds", "Totals", "Subset of full dataset")
#names(qclist) <- c("KTKG", "NTKG", "NTNG")
return(df.out)
}
contentQC(subtype, dataList, refDat, i)
contentQC(subtype2, dataList, refDat, i2)
options(stringsAsFactors = F)
dir <- "~/Desktop/Saba_Lab/Liver/countSums"
batchdate <- c("2015-06-05", "2015-07-17", "2016-01-05", "2016-11-16", "2016-12-20", "2016-12-28", "2017-01-16"
, "2017-02-07", "2017-03-24", "2017-09-01")
sumList <- list()
for(j in batchdate) {
cntsum <- read.table(file = paste(dir, "/data/hi-seq", "/HRDP.Liver.totalRNA.", j, "/rawReads/", "countSummary", ".txt", sep = ""), header = F)
sumList[j] <- cntsum
}
names(sumList) <- batchdate
df.out <- NULL
for(i in 1:10) {
df <- sumList[[i]]
filenames <- df[c(T,F)]
counts <- df[c(F,T)]
df.done <- cbind(filenames, counts)
df.out <- as.data.frame(rbind(df.out, df.done))
}
file.tmp <- unlist(lapply(strsplit(df.out$filenames, split = "\\n", fixed = T), FUN = function(x) x[1]))
file <- unlist(lapply(strsplit(file.tmp[1:278], split = "/", fixed = T), FUN = function(x) x[6]))
file2 <- unlist(lapply(strsplit(file.tmp[279:length(file.tmp)], split = "/", fixed = T), FUN = function(x) x[7]))
file <- c(file, file2)
realcount <- as.numeric(df.out$counts)/4
count.df.tmp <- as.data.frame(cbind(file, realcount))
View(count.df.tmp)
harry <- file.tmp <- unlist(lapply(strsplit(count.df.tmp$file, split = "_", fixed = T), FUN = function(x) x[1]))
harry
file
harry <- file.tmp <- unlist(lapply(strsplit(count.df.tmp$file, split = "liver", fixed = T), FUN = function(x) x[1]))
harry
harry2 <- file.tmp <- unlist(lapply(strsplit(harry, split = "-", fixed = T), FUN = function(x) paste(x[1:3], sep = "-")))
harry2
harry2 <- file.tmp <- unlist(lapply(strsplit(harry, split = "-", fixed = T), FUN = function(x) paste(x[1], x[2], x[3], sep = "-")))
harry2
harry
harry <- file.tmp <- unlist(lapply(strsplit(count.df.tmp$file, split = "_", fixed = T), FUN = function(x) x[1]))
harry
harry <- harry[1:112]
harry
harry2 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) x[1]))
harry2
harry2 <- harry[c(113:198, 203:216)]
harry
harry3 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) x[1]))
harry3 <- unlist(lapply(strsplit(count.df.tmp$file, split = "_", fixed = T), FUN = function(x) x[1]))
harry3
harry3 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) paste(x[1], x[2], sep = "-")))
harry3
harry3 <- harry3[217:302]
harryfull <- c(harry, harry2, harry3)
harry
harry2
harry2 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) x[1]))
harry2
harry2 <- harry2[c(113:198, 203:216)]
harryfull <- c(harry, harry2, harry3)
harry2
harry3
harry <- unlist(lapply(strsplit(count.df.tmp$file, split = "_", fixed = T), FUN = function(x) x[1]))
harry
harry <- harry[1:112]
harry
harry2 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) x[1]))
harry2
harry3 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) paste(x[1], x[2], sep = "-")))
harry3
harry3 <- harry3[c(199:202, 217:302)]
harryfull <- c(harry, harry2, harry3)
rm(harryfull)
harryfull <- c(harry, harry2, harry3)
harry <- unlist(lapply(strsplit(count.df.tmp$file, split = "_", fixed = T), FUN = function(x) x[1]))
harry <- harry[1:112]
harry2 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) x[1]))
harry2 <- harry2[c(113:198, 203:216)]
harry3 <- unlist(lapply(strsplit(count.df.tmp$file, split = "-", fixed = T), FUN = function(x) paste(x[1], x[2], sep = "-")))
harry3 <- harry3[c(199:202, 217:302)]
harryfull <- c(harry, harry2, harry3)
table(harryfull)
harry2
library("devtools")
library(roxygen2)
setwd("/Users/smiharry/Desktop/Saba_Lab/RLBTCP")
create("rlbtcp")
setwd("./rlbtcp")
document()
setwd("..")
install("rlbtcp")
library(rlbtcp)
?rsem.read.iso
?rsem.read.gene
?rm.tech.rep
?pres.abs.table
?sep.panel
?sep.panel.sample
?content.for.plot
