}
colnames(PA.table.factor) <- colnames(PA.table.RMO)
PA.table.factor <- PA.table.factor[, -c(1, 45)]
## re-order columns to be grouped by panel
target <- c("BXH12","HXB13","HXB17","HXB2","HXB25","HXB27","HXB7","BXH2","HXB1","HXB15","HXB21","HXB24","HXB29","HXB4","HXB5","BXH8","BXH10", "BXH11","BXH13","BXH3","BXH5","BXH6","BXH9","HXB10","HXB3","HXB18","HXB20","HXB22","HXB23","HXB31","SHR","BNLx","Cop-CrCrl","F344-NCl","ACI-SegHsd","DA","LEW-Crl","SHRSP", "SR","SS","WKY","F344-NHsd","LEW-SsNHsd")
PA.table.factor <- PA.table.factor[, match(target, names(PA.table.factor))]
library(tidyr)
explore_barcharts <- ggplot(gather(PA.table.factor, cols, value, factor_key = TRUE), aes(x = value, fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 10)) +
geom_histogram(binwidth = 20, stat = "count") + facet_grid(.~cols) +
ggtitle("Present/Absent Distribution by Strain") + xlab("Present/Absent Call") + ylab("Frequency")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/PA_Distribution_StrainLevel3.pdf", height = 5, width = 35)
explore_barcharts
dev.off()
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
tissue <- "Liver"
chrSize <- "rn6.chrom.sizes"
library(ggplot2)
source("~/Desktop/Saba_Lab/Liver/code/multiplot.R")
load(file = paste(dirlocal, tissue, "/quantitation/",  "ST.gtf.dataframes", ".Rdata", sep = ""))
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg, directory = dirlocal, chrSize = chrSize)
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 106, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 106, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
track.position.table(eptOut = ept)
eptOut <- ept
ec1 = 25
ec2 =10
ec3 5
ec3 =5
ept.ntng <- eptOut$EPT.ntng
ept.ntkg <- eptOut$EPT.ntkg
## Assign transcript summary tables to objects
tbl.ntng <- ept$table.ntng
tbl.ntkg <- ept$table.ntkg
## Create transcript name index for subsetting reference dataset
fortrack.ntng.index <- ept.ntng[which(ept.ntng$Exon_Count %in% c(max(ept.ntng$Exon_Count), ec1, ec2, ec3)), ]
fortrack.ntng.index <- fortrack.ntng.index[!duplicated(fortrack.ntng.index$Exon_Count), 1]
fortrack.ntkg.index <- ept.ntkg[which(ept.ntkg$Exon_Count %in% c(max(ept.ntkg$Exon_Count), ec1, ec2, ec3)), ]
fortrack.ntkg.index <- fortrack.ntkg.index[!duplicated(fortrack.ntkg.index$Exon_Count), 1]
## extract transcripts in index above from reference table
fortrack.ntng <- tbl.ntng[which(tbl.ntng$transcript_id %in% fortrack.ntng.index), ]
fortrack.ntkg <- tbl.ntkg[which(tbl.ntkg$transcript_id %in% fortrack.ntkg.index), ]
## Separate by transcript ID and build transcript range dataframe to use as reference when looking at tracks
fortrack.ntng.list <- split(fortrack.ntng, f = fortrack.ntng$transcript_id)
ntng.chrnum <- sapply(fortrack.ntng.list, function(x) paste("chr", x[1, 4], sep = ""))
ntng.maxpos <- sapply(fortrack.ntng.list, function(x) max(x$start, na.rm=TRUE))
ntng.minpos <- sapply(fortrack.ntng.list, function(x) min(x$end, na.rm=TRUE))
fortrack.ntng.index
fortrack.ntkg.index
View(fortrack.ntng)
track.position.table(eptOut = ept)
View(fortrack.ntng)
View(fortrack.ntng)
View(fortrack.ntkg)
fortrack.ntkg.list <- split(fortrack.ntkg, f = fortrack.ntkg$transcript_id)
ntkg.chrnum <- sapply(fortrack.ntkg.list, function(x) paste("chr", x[1, 4], sep = ""))
ntkg.maxpos <- sapply(fortrack.ntkg.list, function(x) max(x$start, na.rm=TRUE))
ntkg.minpos <- sapply(fortrack.ntkg.list, function(x) min(x$end, na.rm=TRUE))
ntkg.range <- rbind(ntkg.chrnum, ntkg.maxpos, ntkg.minpos)
fortrack.ntkg.list$MSTRG.127480.1
harry <- fortrack.ntkg.list$MSTRG.127480.1
smith <- fortrack.ntng.list$MSTRG.156867.1
View(smith)
View(ST_df)
track.position.table(eptOut = ept)
View(ST_df)
## WORKING FROM LOCAL MACHINE SOURCE ##
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
N <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
tissue <- "Liver"
load(file = paste(dirlocal, tissue, "/quantitation/",  "cnts.Merged.isoforms", ".Rdata", sep = ""))
View(cntsMerged)
## WORKING FROM LOCAL MACHINE SOURCE ##
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
N <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
tissue <- "Liver"
load(file = paste(dirlocal, tissue, "/quantitation/",  "cnts.Merged.isoforms", ".Rdata", sep = ""))
View(cntsMerged)
cntsMerged.norep <- rm.tech.rep(cntsMerged)
## Create list of unique strain names in cnts data
mainname = unlist(lapply(strsplit(colnames(cntsMerged.norep),split="_",fixed=TRUE),function(a) a[1]))
mainname[which(mainname == "Cop")] <- "Cop-CrCrl"
View(cntsMerged.norep)
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
N <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
tissue <- "Liver"
load(file = paste(dirlocal, tissue, "/quantitation/",  "cnts.Merged.isoforms", ".Rdata", sep = ""))
## remove technical replicates (i.e. only keep the replicate with the highest expresison)
cntsMerged.norep <- rm.tech.rep(cntsMerged)
## Create list of unique strain names in cnts data
mainname = unlist(lapply(strsplit(colnames(cntsMerged.norep),split="_",fixed=TRUE),function(a) a[1]))
mainname[which(mainname == "Cop")] <- "Cop-CrCrl"
## Remove outliers
cntsMerged.norep.RMO <- cntsMerged.norep[, -which(names(cntsMerged.norep) %in% c("HXB10_2_batch4", "WKY_2_batch8", "DA_3_batch10", "Lew-Crl_3_batch10"))]
View(cntsMerged.norep.RMO)
PA.table.RMO <- pres.abs.table(cntsMerged.norep.RMO, mainname)
View(PA.table.RMO)
names(cntsMerged.norep.RMO)
harry <- names(cntsMerged.norep.RMO)
## WORKING FROM LOCAL MACHINE SOURCE ##
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
N <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
tissue <- "Liver"
load(file = paste(dirlocal, tissue, "/quantitation/",  "PA.table.sampled", ".Rdata", sep = ""))
## summarize transcript content using sep.panel function. This function will create useful datasets as well.
content.summary <- sep.panel(PA.table.sampled)
## Create plots to be used for content bar charts
'%!in%' <- function(x,y)!('%in%'(x,y)) # Define not in function
content.plot.data <- content.for.plot(content.summary)
ntng.rslt <- content.plot.data$NTNG.results
ntng.rslt <- ntng.rslt[which(ntng.rslt$RS.all %!in% "Other"), ]
ntkg.rslt <- content.plot.data$NTKG.results
ntkg.rslt <- ntkg.rslt[which(ntkg.rslt$RS.all %!in% "Other"), ]
## Read in "stringtie_merged_results.gtf" and format into dataframe
directory <- paste(dirlocal, tissue, "/quantitation/", sep = "")
file_merged <- "stringtie_results_liver.gtf"
sample_merged <- "merged"
options(stringsAsFactors = FALSE)
library(rtracklayer)
library(GenomicRanges)
ST_gtfClean <- import(paste(directory, file_merged, sep = "")) #This imports the .gtf file and formats the information in the file and the 9th column to something more    readible
ST_df <- as.data.frame(ST_gtfClean) #Converts the object above to a dataframe
ST_df.ntng <- ST_df[which(ST_df$transcript_id %in% rownames(ntng.rslt)), ]
ST_df.ntkg <- ST_df[which(ST_df$transcript_id %in% rownames(ntkg.rslt)), ]
save(ST_df, ST_df.ntkg, ST_df.ntng, file = paste(dirlocal, tissue, "/quantitation/",  "ST.gtf.dataframes", ".Rdata", sep = ""))
source("~/Desktop/Saba_Lab/Liver/code/rsem.read.R")
## Create global directory objects
dir <- "/Volumes/smiharry/Saba_Lab/RNA-Seq/HRDP/"
dirs2 <- "/Volumes/rn6/quantitation/liverTotalRNA/RI/"
dirlocal <- "~/Desktop/Saba_Lab/"
tissue <- "Liver"
chrSize <- "rn6.chrom.sizes"
source("~/Desktop/Saba_Lab/Liver/code/multiplot.R")
library(ggplot2)
load(file = paste(dirlocal, tissue, "/quantitation/",  "ST.gtf.dataframes", ".Rdata", sep = ""))
## Calculate exon per transcript and create exon per transcript table objects for graphing and table formatting
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg, directory = dirlocal, chrSize = chrSize)
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 106, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 106, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
track.position.table(eptOut = ept)
head(ept$EPT.ntng)
head(ept$table.ntng)
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
head(ept$EPT.ntng)
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max:", ept$EPT.ntng[1,2], ept$EPT.ntng[1,1], sep = " "),
color="red")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max:", ept$EPT.ntng[1,2], ", ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=60, y=950, label=paste("Max: ", ept$EPT.ntkg[1,2], "\n", "ID: ", ept$EPT.ntkg[1,1], sep = ""),
color="black")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=60, y=925, label=paste("Max: ", ept$EPT.ntkg[1,2], "\n", "ID: ", ept$EPT.ntkg[1,1], sep = ""),
color="black")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=60, y=935, label=paste("Max: ", ept$EPT.ntkg[1,2], "\n", "ID: ", ept$EPT.ntkg[1,1], sep = ""),
color="black")
pdf("~/Desktop/Saba_Lab/Liver/Graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
View(ST_df.ntkg)
load(file = paste(dirlocal, tissue, "/quantitation/",  "PA.table.RMO", ".Rdata", sep = ""))
BXH1IR <- read.table("~/Desktop/Saba_Lab/Liver/quantitation/BXH2_1.isoforms.results", header = TRUE, sep = "\t")
BXH1IR.nospike <- BXH1IR[which(!startsWith(BXH1IR$gene_id, "ERCC")), ]
View(BXH1IR.nospike)
track.position.table(eptOut = ept)
## Source rsem.read
source("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/code/BE.functions.R")
## Create global directory objects
dirs <- "/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/"
load(file = paste(dirs, "/quantitation/", "reconst/", "PA.table.BE", ".Rdata", sep = ""))
content.summary <- sep.panel(PA.table)
## Create plots to be used for content bar charts
'%!in%' <- function(x,y)!('%in%'(x,y)) # Define not in function
content.plot.data <- content.for.plot(content.summary)
ntng.rslt <- content.plot.data$NTNG.results
ntng.rslt <- ntng.rslt[which(ntng.rslt$RS.all %!in% "Other"), ]
ntkg.rslt <- content.plot.data$NTKG.results
ntkg.rslt <- ntkg.rslt[which(ntkg.rslt$RS.all %!in% "Other"), ]
## Read in "stringtie_merged_results.gtf" and format into dataframe
directory <- "/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/stringtie/"
file_merged <- "stringtie_results.gtf"
options(stringsAsFactors = FALSE)
library(rtracklayer)
library(GenomicRanges)
ST_gtfClean <- import(paste(directory, file_merged, sep = "")) #This imports the .gtf file and formats the information in the file and the 9th column to something more    readible
ST_df <- as.data.frame(ST_gtfClean) #Converts the object above to a dataframe
ST_df.ntng <- ST_df[which(ST_df$transcript_id %in% rownames(ntng.rslt)), ]
ST_df.ntkg <- ST_df[which(ST_df$transcript_id %in% rownames(ntkg.rslt)), ]
View(ST_df.ntkg)
View(PA.table)
S25IR <- read.table("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/quantitation/rsem.StringTie/1_S25.isoforms.results", header = TRUE, sep = "\t")
View(S25IR)
View(ST_df.ntng)
save(ST_df, ST_df.ntkg, ST_df.ntng, file = paste(dirlocal, tissue, "/quantitation/",  "ST.gtf.dataframes", ".Rdata", sep = ""))
save(ST_df, ST_df.ntkg, ST_df.ntng, file = paste(dirs, "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
save(ST_df, ST_df.ntkg, ST_df.ntng, file = paste(dirs, "quantitation/", "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
## Read in RSEM data
## Source rsem.read
source("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/code/BE.functions.R")
## Create global directory objects
dirs <- "/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/"
library(ggplot2)
source("~/Desktop/Saba_Lab/Liver/code/multiplot.R")
## load ST_df datasets
load(file = paste(dirs, "quantitation/", "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
## Calculate exon per transcript and create exon per transcript table objects for graphing and table formatting
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg)
ept$EPT.ntng
head(ept$EPT.ntng)
head(ept$EPT.ntkg)
load(file = paste(dirs, "/quantitation/", "reconst/", "PA.table.BE", ".Rdata", sep = ""))
View(PA.table)
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=600, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=60, y=935, label=paste("Max: ", ept$EPT.ntkg[1,2], "\n", "ID: ", ept$EPT.ntkg[1,1], sep = ""),
color="black")
pdf("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
ntng.exon.plot <- ggplot(data=ept$EPT.ntng, aes(ept$EPT.ntng$Exon_Count)) +
geom_histogram(breaks=seq(1, 45, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle="Group: Novel Transcript of Novel Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=25, y=15000, label=paste("Max: ", ept$EPT.ntng[1,2], "\n", "ID: ", ept$EPT.ntng[1,1], sep = ""),
color="black")
ntkg.exon.plot <- ggplot(data=ept$EPT.ntkg, aes(ept$EPT.ntkg$Exon_Count)) +
geom_histogram(breaks=seq(1, 107, by = 1),
col="black",
fill="blue",
alpha = .4) +
labs(title="Distribution of Exons Per Transcript",
subtitle = "Group: Novel Transcript of Known Gene") +
labs(x="Number of exons", y="Count") +
annotate(geom="text", x=60, y=8000, label=paste("Max: ", ept$EPT.ntkg[1,2], "\n", "ID: ", ept$EPT.ntkg[1,1], sep = ""),
color="black")
pdf("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/graphics/ExonPerTranscriptDistribution.pdf", width = 8, height = 5)
multiplot(ntng.exon.plot, ntkg.exon.plot, cols = 2)
dev.off()
## load ST_df datasets
load(file = paste(dirs, "quantitation/", "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
## Calculate exon per transcript and create exon per transcript table objects for graphing and table formatting
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg)
## build track range tables for reference in viewing tracks in UCSC - NEED TO ADD CHROMOSOME NUMBER TO THIS TABLE
track.position.table(eptOut = ept)
## Read in RSEM data
## Source rsem.read
source("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/code/BE.functions.R")
## Create global directory objects
dirs <- "/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/"
## load ST_df datasets
load(file = paste(dirs, "quantitation/", "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
## Calculate exon per transcript and create exon per transcript table objects for graphing and table formatting
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg)
## build track range tables for reference in viewing tracks in UCSC - NEED TO ADD CHROMOSOME NUMBER TO THIS TABLE
track.position.table(eptOut = ept)
## Read in RSEM data
## Source rsem.read
source("/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/code/BE.functions.R")
## Create global directory objects
dirs <- "/Users/smiharry/Desktop/Saba_Lab/RNA-Seq/BE_Molly/"
## load ST_df datasets
load(file = paste(dirs, "quantitation/", "reconst/", "ST.gtf.dataframes", ".Rdata", sep = ""))
## Calculate exon per transcript and create exon per transcript table objects for graphing and table formatting
ept <- exon.tpt.table(ST_df.ntng, ST_df.ntkg)
## build track range tables for reference in viewing tracks in UCSC - NEED TO ADD CHROMOSOME NUMBER TO THIS TABLE
track.position.table(eptOut = ept)
head(ept$EPT.ntng)
ept$EPT.ntng[which(ept$EPT.ntng$Exon_Count %in% 10), ]
View(ST_df.ntng)
ept$EPT.ntng[which(ept$EPT.ntng$Exon_Count %in% 5), ]
library("devtools")
setwd("/Users/smiharry/Desktop/Saba_Lab/RLBTCP")
create("rlbtcp")
setwd("./rlbtcp")
document()
setwd("..")
install("rlbtcp")
library(rlbtcp)
remove.packages("rlbtcp")
install("rlbtcp")
library(rlbtcp)
remove.packages("rlbtcp")
